buildscript {
    ext.kotlinVersion = "1.3.41"
    ext.gdxVersion = "1.9.9"

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
        google()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:3.4.1"
        classpath "com.mobidevelop.robovm:robovm-gradle-plugin:2.3.6"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
    }
}
import com.badlogic.gdx.tools.texturepacker.TexturePacker

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = "1.0"
    ext {
        appName = "physics-puzzle-platformer"
        gdxVersion = "1.9.9"
        roboVMVersion = "2.3.6"
        box2DLightsVersion = "1.4"
        ashleyVersion = "1.7.3"
        aiVersion = "1.8.0"
        ktxVersion = gdxVersion + "-b2"
        koinVersion = "2.0.1"
        junitVersion = "5.4.2"
        assertJVersion = "3.12.2"
        thirdPartyKotlinXmlBuilder = "1.5.1"
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        google()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

project(":desktop") {
    apply plugin: "kotlin"


    dependencies {
        api project(":core")
        api "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        api "org.redundent:kotlin-xml-builder:$thirdPartyKotlinXmlBuilder"

        testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

        testImplementation "org.assertj:assertj-core:$assertJVersion"
    }
}

project(":android") {
    apply plugin: "android"
    apply plugin: "kotlin-android"

    configurations { natives }

    dependencies {
        api project(":core")
        api "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"
        api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86_64"
        api "com.badlogicgames.ashley:ashley:$ashleyVersion"
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    }
}

project(":ios") {
    apply plugin: "kotlin"
    apply plugin: "robovm"


    dependencies {
        api project(":core")
        api "com.mobidevelop.robovm:robovm-rt:$roboVMVersion"
        api "com.mobidevelop.robovm:robovm-cocoatouch:$roboVMVersion"
        api "com.badlogicgames.gdx:gdx-backend-robovm:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-ios"
        api "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-ios"
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    }
}

project(":core") {
    apply plugin: "kotlin"

    ext {
        texturePackerDirectory = "$projectDir/textures"
        texturePackerOutputDirectory = "$rootDir/android/assets/atlas"
        texturePackerAtlasName = "textures.atlas"
    }

    dependencies {
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        api "com.badlogicgames.ashley:ashley:$ashleyVersion"
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        api "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

        api "io.github.libktx:ktx-actors:$ktxVersion"
        api "io.github.libktx:ktx-app:$ktxVersion"
        api "io.github.libktx:ktx-assets:$ktxVersion"
        api "io.github.libktx:ktx-ashley:$ktxVersion"
        api "io.github.libktx:ktx-collections:$ktxVersion"
        api "io.github.libktx:ktx-graphics:$ktxVersion"
        api "io.github.libktx:ktx-log:$ktxVersion"
        api "io.github.libktx:ktx-math:$ktxVersion"
        api "io.github.libktx:ktx-scene2d:$ktxVersion"
        api "io.github.libktx:ktx-box2d:$ktxVersion"

        implementation "org.koin:koin-core:$koinVersion"
        testImplementation "org.koin:koin-test:$koinVersion"

        testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

        testImplementation "org.assertj:assertj-core:$assertJVersion"
    }

    test {
        useJUnitPlatform()
    }

    task texturePacker {
        if (project.ext.has("texturePackerDirectory")) {
            inputs.dir(texturePackerDirectory)
            outputs.dir(texturePackerOutputDirectory)
            doLast {
                logger.info("Calling TexturePacker:")
                TexturePacker.process(texturePackerDirectory, texturePackerOutputDirectory, texturePackerAtlasName)
            }
        }
    }

    classes.dependsOn texturePacker
}

tasks.eclipse.doLast {
    delete ".project"
}
